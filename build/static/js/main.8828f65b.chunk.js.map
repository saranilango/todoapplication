{"version":3,"sources":["store/action.js","store/actions/toDoAddAction.js","components/todo.js","App.js","reportWebVitals.js","store/reducers/reducer.js","store/reducers/index.js","store/store.js","index.js"],"names":["TODO_ADD_SUCCESS","TODO_ADD_ERROR","toDoAddAction","data","dispatch","type","actionTypes","payloads","connect","state","toDoAddReducer","bindActionCreators","props","useState","todoList","setTodoList","allTodoList","setAllTodoList","newTodo","setNewTodo","searchTodoValue","setSearchTodoValue","input","setInput","isAll","setIsAll","isCompleted","setIsCompleted","isActive","setIsActive","count","setCount","useEffect","isSuccess","length","className","placeholder","value","onKeyDown","event","key","newTodos","inputValues","isChecked","alert","onChange","target","newArray","filter","list","getText","toLowerCase","searchtext","indexOf","map","option","index","e","currentTarget","checked","totalCompleted","checkValue","style","color","onClick","backgroundColor","border","borderRadius","active","App","path","component","todo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","toDoAdd","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"wPACaA,EAAmB,mBACnBC,EAAiB,iBCAjBC,EAAgB,SAACC,GAC1B,OAAO,SAACC,GACJA,EAAS,CACLC,KAAMC,EACNC,SAAUJ,M,eCyJPK,eAZS,SAAAC,GAEpB,MAAO,CACHC,eAFuBD,EAAnBC,mBAKe,SAACN,GACxB,OAAOO,YAAmB,CACtBT,iBACDE,KAGQI,EA1JF,SAACI,GACV,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8CN,mBAAS,IAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAA0BR,oBAAS,GAAnC,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAA0BV,oBAAS,GAAnC,mBAAOW,EAAP,KAAcC,EAAd,KACA,EAAsCZ,oBAAS,GAA/C,mBAAOa,EAAP,KAAoBC,EAApB,KACA,EAAgCd,oBAAS,GAAzC,mBAAOe,EAAP,KAAiBC,EAAjB,KACA,EAA0BhB,mBAAS,GAAnC,mBAAOiB,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACFpB,EAAMF,eAAeuB,YACrBlB,EAAYH,EAAMF,eAAeP,MACjCc,EAAeL,EAAMF,eAAeP,MACpC4B,EAASnB,EAAMF,eAAeP,KAAK+B,WAGxC,CAACtB,EAAMF,iBA4EV,OACI,sBAAKyB,UAAU,UAAf,UAEI,qBAAKA,UAAU,SAAf,SAAwB,oDACxB,qBAAKA,UAAU,UAAf,SACI,sBAAKA,UAAU,mBAAf,UACKb,EAAQ,uBAAOjB,KAAK,OAAO+B,YAAY,UAAUC,MAAOnB,EAASoB,UAzC5D,SAACC,GACnB,GAAkB,UAAdA,EAAMC,IACN,GAAgB,KAAZtB,EAAgB,CAChB,IAAIuB,EAAW,CACXC,YAAaxB,EACbyB,WAAW,GAEf/B,EAAMV,cAAcuC,GACpBtB,EAAW,SAEXyB,MAAM,wBA+B0FC,SAhFvF,SAACN,GAClBpB,EAAWoB,EAAMO,OAAOT,UAgFR,uBAAOhC,KAAK,OAAO+B,YAAY,SAASC,MAAOjB,EAAiByB,SAxE/D,SAACN,GAClB,IAAIQ,EAAW/B,EAAYgC,QAAO,SAAAC,GAC9B,IAAIC,EAAUD,EAAKP,YAAcO,EAAKP,YAAYS,cAAgB,GAC9DC,EAAab,EAAMO,OAAOT,MAC9B,OAAwC,IAAjCa,EAAQG,QAAQD,MAG3BrC,EAAYgC,GACZ1B,EAAmBkB,EAAMO,OAAOT,UAkEpB,qBAAKF,UAAU,iBAAf,SACKrB,EAASoB,OAAS,EAAIpB,EAASwC,KAAI,SAACC,EAAQC,GAAT,OAChC,sBAAKrB,UAAS,wBAAd,UACI,+BACI,uBAAO9B,KAAK,WAAWwC,SAAU,SAACY,GAAD,OAlE9C,SAACA,EAAGD,GACnB,GAAIC,EAAEC,cAAcC,QAAS,CACzB,IAAIxD,EAAOW,EACXX,EAAKqD,GAAOb,WAAY,EACxB5B,EAAYZ,GACZc,EAAed,OAEZ,CACH,IAAIA,EAAOW,EACXX,EAAKqD,GAAOb,WAAY,EACxB5B,EAAYZ,GACZc,EAAed,GAGnB,IAAIyD,EAAiB9C,EAASkC,QAAO,SAAC7C,GAAD,OAAWA,EAAKwC,aACrDZ,EAAS6B,EAAe1B,QAmD4C2B,CAAWJ,EAAGD,IAAQnB,MAAOkB,EAAOZ,UAAWgB,QAASJ,EAAOZ,cAG3G,qBAAKR,UAAS,iBAAgC,IAArBoB,EAAOZ,UAAqB,aAAe,MAApE,SACKY,EAAOb,gBAN8Bc,MAU9C,KAER,sBAAKrB,UAAU,iBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,sBAAMA,UAAU,sBAAsB2B,MAAO,CAAEC,MAAOzC,EAAQ,GAAK,QAAU0C,QAhGrF,WACZzC,GAAS,IA+FW,SACI,mBAAGY,UAAU,kBAEjB,sBAAMA,UAAU,sBAAsB2B,MAAO,CAAEC,MAAOzC,EAAQ,OAAS,IAAM0C,QAhGlF,WACfzC,GAAS,IA+FW,SACI,mBAAGY,UAAU,oBAEjB,qCACA,uBAAMA,UAAU,eAAhB,UAAgCL,EAAhC,oBAEJ,sBAAKK,UAAU,iBAAf,UACI,qBAAKA,UAAU,4BAA4B2B,MAAO,CAAEG,gBAAiBzC,EAAQ,OAAS,QAAS0C,OAAQ1C,EAAQ,aAAe,GAAI2C,aAAc3C,EAAQ,MAAQ,IAAMwC,QAvD5K,WACdjD,EAAYC,GACZS,GAAS,GACTI,GAAY,GACZF,GAAe,IAmDK,iBACA,qBAAKQ,UAAU,4BAA4B2B,MAAO,CAAEG,gBAAiBrC,EAAW,OAAS,QAASsC,OAAQtC,EAAW,aAAe,GAAIuC,aAAcvC,EAAW,MAAQ,IAAMoC,QAlDlL,WACjB,IAAII,EAASpD,EAAYgC,QAAO,SAAC7C,GAAD,OAA6B,IAAnBA,EAAKwC,aAC/C5B,EAAYqD,GACZ3C,GAAS,GACTI,GAAY,GACZF,GAAe,IA6CK,oBACA,qBAAKQ,UAAU,4BAA4B2B,MAAO,CAAEG,gBAAiBvC,EAAc,OAAS,QAASwC,OAAQxC,EAAc,aAAe,GAAIyC,aAAczC,EAAc,MAAQ,IAAMsC,QA5CvL,WACrB,IAAII,EAASpD,EAAYgC,QAAO,SAAC7C,GAAD,OAAUA,EAAKwC,aAC/C5B,EAAYqD,GACZ3C,GAAS,GACTI,GAAY,GACZF,GAAe,IAuCK,kCAKhB,qBAAKQ,UAAU,iBC/HZkC,MAVf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWC,SCIpBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gCCNRQ,EAAe,CACjB/E,KAAM,GACN8B,WAAW,GAmBAkD,EAhBC,WAAmC,IAAlC1E,EAAiC,uDAAzByE,EAAcE,EAAW,uCACtC/E,EAAmB+E,EAAnB/E,KAAME,EAAa6E,EAAb7E,SACd,OAAQF,GACJ,KAAKC,EACD,OAAO,2BACAG,GADP,IACcN,KAAK,GAAD,mBAAMM,EAAMN,MAAZ,CAAkBI,IAAW0B,WAAW,IAE9D,KAAK3B,EACD,OAAO,2BACAG,GADP,IACcN,KAAMI,EAAU0B,WAAW,IAE7C,QACI,OAAOxB,ICXJ4E,EAHKC,YAAgB,CAChC5E,mBCQW6E,EAPDC,YACZH,EACAI,YACEC,MCCJC,IAASC,OACL,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEJM,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.8828f65b.chunk.js","sourcesContent":["\nexport const TODO_ADD_SUCCESS = 'TODO_ADD_SUCCESS';\nexport const TODO_ADD_ERROR = 'TODO_ADD_ERROR';","import * as actionTypes from '../action.js';\r\n\r\nexport const toDoAddAction = (data)=>{\r\n    return((dispatch)=>{\r\n        dispatch({\r\n            type: actionTypes.TODO_ADD_SUCCESS,\r\n            payloads: data\r\n        })\r\n    })\r\n} ","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { toDoAddAction } from '../store/actions/toDoAddAction';\r\nimport \"./todo.scss\"\r\nconst Todo = (props) => {\r\n    const [todoList, setTodoList] = useState([]);\r\n    const [allTodoList, setAllTodoList] = useState([]);\r\n    const [newTodo, setNewTodo] = useState(\"\");\r\n    const [searchTodoValue, setSearchTodoValue] = useState(\"\");\r\n    const [input, setInput] = useState(true);\r\n    const [isAll, setIsAll] = useState(true);\r\n    const [isCompleted, setIsCompleted] = useState(false);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [count, setCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (props.toDoAddReducer.isSuccess) {\r\n            setTodoList(props.toDoAddReducer.data);\r\n            setAllTodoList(props.toDoAddReducer.data);\r\n            setCount(props.toDoAddReducer.data.length);\r\n\r\n        }\r\n    }, [props.toDoAddReducer]);\r\n\r\n    const handleChange = (event) => {\r\n        setNewTodo(event.target.value);\r\n    }\r\n    const addTodo = () => {\r\n        setInput(true);\r\n    }\r\n    const searchTodo = () => {\r\n        setInput(false);\r\n    }\r\n    const handleSearch = (event) => {\r\n        let newArray = allTodoList.filter(list => {\r\n            let getText = list.inputValues ? list.inputValues.toLowerCase() : \"\";\r\n            let searchtext = event.target.value;\r\n            return getText.indexOf(searchtext) !== -1;\r\n\r\n        });\r\n        setTodoList(newArray);\r\n        setSearchTodoValue(event.target.value);\r\n\r\n    }\r\n\r\n    const checkValue = (e, index) => {\r\n        if (e.currentTarget.checked) {\r\n            let data = todoList;\r\n            data[index].isChecked = true;\r\n            setTodoList(data);\r\n            setAllTodoList(data);\r\n\r\n        } else {\r\n            let data = todoList;\r\n            data[index].isChecked = false;\r\n            setTodoList(data);\r\n            setAllTodoList(data);\r\n        }\r\n\r\n        let totalCompleted = todoList.filter((data) => !data.isChecked);\r\n        setCount(totalCompleted.length);\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            if (newTodo !== \"\") {\r\n                let newTodos = {\r\n                    inputValues: newTodo,\r\n                    isChecked: false\r\n                }\r\n                props.toDoAddAction(newTodos);\r\n                setNewTodo(\"\");\r\n            } else {\r\n                alert('Please Enter Values');\r\n            }\r\n        }\r\n    }\r\n\r\n    const filterAll = () => {\r\n        setTodoList(allTodoList);\r\n        setIsAll(true)\r\n        setIsActive(false)\r\n        setIsCompleted(false)\r\n    }\r\n    const filterActive = () => {\r\n        let active = allTodoList.filter((data) => data.isChecked === false);\r\n        setTodoList(active);\r\n        setIsAll(false)\r\n        setIsActive(true)\r\n        setIsCompleted(false);\r\n    }\r\n    const filterCompleated = () => {\r\n        let active = allTodoList.filter((data) => data.isChecked);\r\n        setTodoList(active);\r\n        setIsAll(false)\r\n        setIsActive(false)\r\n        setIsCompleted(true)\r\n    }\r\n    return (\r\n        <div className=\"wrapper\">\r\n\r\n            <div className=\"header\"><h2>Todo Application</h2></div>\r\n            <div className=\"content\">\r\n                <div className=\"content-blk card\">\r\n                    {input ? <input type=\"text\" placeholder=\"Add New\" value={newTodo} onKeyDown={handleKeyDown} onChange={handleChange} /> :\r\n                        <input type=\"text\" placeholder=\"Search\" value={searchTodoValue} onChange={handleSearch} />\r\n                    }\r\n                    <div className=\"ht560 srl_auto\" >\r\n                        {todoList.length > 0 ? todoList.map((option, index) =>\r\n                            <div className={`list_stl checkbox_stl`} key={index} >\r\n                                <span>\r\n                                    <input type=\"checkbox\" onChange={(e) => checkValue(e, index)} value={option.isChecked} checked={option.isChecked} />\r\n                                </span>\r\n\r\n                                <div className={`ml-1  ${option.isChecked === true ? 'is_checked' : null}`}>\r\n                                    {option.inputValues}\r\n                                </div>\r\n\r\n                            </div>\r\n                        ) : \"\"}\r\n                    </div>\r\n                    <div className=\"foot_container\">\r\n                        <div className=\"div_padding\">\r\n                            <span className=\"span_padding cursor\" style={{ color: input ? \"\" : \"gray\" }} onClick={addTodo}>\r\n                                <i className=\"fas fa-plus\"></i>\r\n                            </span>\r\n                            <span className=\"span_padding cursor\" style={{ color: input ? \"gray\" : \"\" }} onClick={searchTodo} >\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </span>\r\n                            <span>|</span>\r\n                            <span className=\"span_padding\">{count} items left</span>\r\n                        </div>\r\n                        <div className=\"foot_container\">\r\n                            <div className=\"div_mrging padding cursor\" style={{ backgroundColor: isAll ? 'grey' : 'white', border: isAll ? \"1px double\" : \"\", borderRadius: isAll ? \"2px\" : \"\" }} onClick={filterAll}>All</div>\r\n                            <div className=\"div_mrging padding cursor\" style={{ backgroundColor: isActive ? 'grey' : 'white', border: isActive ? \"1px double\" : \"\", borderRadius: isActive ? \"2px\" : \"\" }} onClick={filterActive}>Active</div>\r\n                            <div className=\"div_mrging padding cursor\" style={{ backgroundColor: isCompleted ? 'grey' : 'white', border: isCompleted ? \"1px double\" : \"\", borderRadius: isCompleted ? \"2px\" : \"\" }} onClick={filterCompleated}>Completed</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"footer\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n    const { toDoAddReducer } = state\r\n    return {\r\n        toDoAddReducer\r\n    }\r\n}\r\nconst mapDispatchtoProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        toDoAddAction\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Todo);\r\n","import './App.scss';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport todo from \"./components/todo\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" component={todo} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import * as actionTypes from '../action';\nconst initialState = {\n    data: [],\n    isSuccess: false\n}\n\nconst toDoAdd = (state = initialState, action) => {\n    const { type, payloads } = action;\n    switch (type) {\n        case actionTypes.TODO_ADD_SUCCESS:\n            return {\n                ...state, data: [...state.data, payloads], isSuccess: true\n            };\n        case actionTypes.TODO_ADD_ERROR:\n            return {\n                ...state, data: payloads, isSuccess: false\n            };\n        default:\n            return state;\n    }\n}\n\nexport default toDoAdd;","import { combineReducers } from 'redux';\r\nimport  toDoAddReducer from './reducer';\r\n\r\n//Combines all the reducer for the store and exports to it\r\nconst rootReducer = combineReducers({\r\n    toDoAddReducer\r\n});\r\nexport default rootReducer;","  \r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(\r\n    thunkMiddleware\r\n  )\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport store from './store/store';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}